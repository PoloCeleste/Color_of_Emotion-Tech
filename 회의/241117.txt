1. 유저 색 선택 -> 색이랑 어울리는 영화, 장르
 -> 그 색을 자주 사용하는 감독의 필모

영화, 장르에 색 값이 대입이 되어있어야 함
감독에 대한 정보도 db를 가지고 있어야 함
-> 전처리할게 엄청 많다.
or 감독을 우리가 미리 정해놓고, 그 감독을 추천하는 식으로 하면 적은 데이터로 구현 가능.
tmdb 로는 살짝 부족한 영화 양이 될 수도 있음.

2. 감정 기반 색 추출
추출된 색 기반 영화
-> 감정의 색 이라는 제목에 어울리는 테마인 것 같다.
-> 감정별로 색을 배정을 해두고. 주된 감정값에 따라서 명도, 채도를 조절, 색의 선택은 부감정을 이용해서 선택
-> 이게 진짜로 연결이 되는지는 잘 모르겠음
합당한 선택인가?
장점 : 주감정이 명도랑 채도값을 가지면, 필터링이 용이해진다. 

3. 감성적으로 간다. (일단 여기서 난 좀 못미덥긴함.) 감정 분석 -> 색 추출 -> 화면 구성 -> 적절한 멘트 -> 페이지 나누지말고 (스크롤) 멘트 쭈우욱 보여주고, 영화 추천

+ 이런 감정일 땐 이런 영화를 봤다. 이런 감정일 땐 이런 영화에 좋아요를 눌렀다. (이거는 다른 사이트에서 구현해 놓은 데이터가 없다.)


필요한 것. 
1.
감정값 -> 사람이 감정별로 얼마의 점수를 가지고 있느냐? 이게 중요한데. 
`내가 한 코드가 의미가 있는지 확인 필요.`
```
문제 -> 화면에 얼굴을 비췄을 때 디폴트값이 사람마다 다 다르다. 
상대값으로 쓰는게 더 효과적일수 있다.
예) 최초 : 기 50 슬픔 30 중립 20 
	     기 45 슬픔 40 중립 15
		-5        +10	      -5
편차가 큰 값을 배재
중간값만 쓴다.
최초 감정(5~10) / 이후 감정(10 + a)
카메라가 꺼진거 / 카메라가 켜진거
스크립트 전 /  스크립트 후
최초감정 = {기, 슬, 분, 당, 중, ~~}
이후감정 = {기, 슬, 분, 당, 중, ~~}
만약에 안먹히면, 가중치

오늘하루 고생하셨어요
오늘은 어떤 일이 있었나요?
가장 기억에 남는 일은 무엇이었나요?
하루는 만족스러웠나요?
가장 의미깊은 기억을 떠올려보세요.
```

2.
영화 db
영화 제이슨파일
1. tmdb에서 최대의 정보를 전부 api로 긁어온다.
2. 영화 제목 기반으로 왓챠피디아 검색. 리뷰, 갤러리, 동영상, 평점 크롤링(주소)
3. 색데이터. 1 이후에 1번의 포스터를 가지고 와서 대표색상 5-10? 갯수가 늘어나도 색상 값이 바뀌면 안됨.

이거 파이썬 코드 짜야됨.
```
->  싸피가서 합니까? 집에 돌려놓고 집가서 확인하는 방식?
보수적으로 생각을 하면.. 최대한 뽑아내고, 그 뽑아낸 값을 제이슨에 넣는 형식
인기 / 비인기 -> 애매해. 근데 정배야.

tmdb 같은 경우는 우리나라에서 못쓰는 youtube링크를 제공하니까, 차라리 제대로 된거 주는 왓챠피디아 같은 국내 사이트를 이용하는 게 좀 더 도움이 될 것 같다.

크롤링 합니까?
```

3. ERD


4. 간트차트


5. 와이어프레임(레이아웃)


